[{"/Users/scarlet/Desktop/React/01-starting-project/src/index.js":"1","/Users/scarlet/Desktop/React/01-starting-project/src/App.js":"2","/Users/scarlet/Desktop/React/01-starting-project/src/components/Cart/Cart.js":"3","/Users/scarlet/Desktop/React/01-starting-project/src/components/Shop/Products.js":"4","/Users/scarlet/Desktop/React/01-starting-project/src/components/Layout/Layout.js":"5","/Users/scarlet/Desktop/React/01-starting-project/src/components/Shop/ProductItem.js":"6","/Users/scarlet/Desktop/React/01-starting-project/src/components/Layout/MainHeader.js":"7","/Users/scarlet/Desktop/React/01-starting-project/src/components/UI/Card.js":"8","/Users/scarlet/Desktop/React/01-starting-project/src/components/Cart/CartButton.js":"9","/Users/scarlet/Desktop/React/01-starting-project/src/components/UI/Form.js":"10","/Users/scarlet/Desktop/React/01-starting-project/src/components/UI/Contact.js":"11","/Users/scarlet/Desktop/React/cleaning-service-project/src/index.js":"12","/Users/scarlet/Desktop/React/cleaning-service-project/src/App.js":"13","/Users/scarlet/Desktop/React/cleaning-service-project/src/components/Shop/Products.js":"14","/Users/scarlet/Desktop/React/cleaning-service-project/src/components/Layout/Layout.js":"15","/Users/scarlet/Desktop/React/cleaning-service-project/src/components/Cart/Cart.js":"16","/Users/scarlet/Desktop/React/cleaning-service-project/src/components/UI/Contact.js":"17","/Users/scarlet/Desktop/React/cleaning-service-project/src/components/Shop/ProductItem.js":"18","/Users/scarlet/Desktop/React/cleaning-service-project/src/components/Layout/MainHeader.js":"19","/Users/scarlet/Desktop/React/cleaning-service-project/src/components/UI/Card.js":"20","/Users/scarlet/Desktop/React/cleaning-service-project/src/components/UI/Form.js":"21","/Users/scarlet/Desktop/React/cleaning-service-project/src/components/Cart/CartButton.js":"22","/Users/scarlet/Desktop/React/cleaning-service-project/src/components/Layout/Footer.js":"23","/Users/scarlet/Desktop/React/cleaning-service-project/src/components/Display.js":"24","/Users/scarlet/Desktop/React/cleaning-service-project/src/components/About.js":"25","/Users/scarlet/Desktop/React/cleaning-service-project/src/components/Overlay.js":"26","/Users/scarlet/Desktop/cleaning-service-project/src/index.js":"27","/Users/scarlet/Desktop/cleaning-service-project/src/App.js":"28","/Users/scarlet/Desktop/cleaning-service-project/src/components/UI/Form.js":"29","/Users/scarlet/Desktop/cleaning-service-project/src/components/Layout/Layout.js":"30","/Users/scarlet/Desktop/cleaning-service-project/src/components/UI/Card.js":"31","/Users/scarlet/Desktop/cleaning-service-project/src/components/Layout/MainHeader.js":"32"},{"size":381,"mtime":1649519650520,"results":"33","hashOfConfig":"34"},{"size":555,"mtime":1649959367850,"results":"35","hashOfConfig":"34"},{"size":295,"mtime":1649509834238,"results":"36","hashOfConfig":"34"},{"size":890,"mtime":1649956216933,"results":"37","hashOfConfig":"34"},{"size":283,"mtime":1649475253465,"results":"38","hashOfConfig":"34"},{"size":490,"mtime":1649961213512,"results":"39","hashOfConfig":"34"},{"size":413,"mtime":1649513796685,"results":"40","hashOfConfig":"34"},{"size":306,"mtime":1649511911992,"results":"41","hashOfConfig":"34"},{"size":320,"mtime":1649475072246,"results":"42","hashOfConfig":"34"},{"size":6936,"mtime":1649960920501,"results":"43","hashOfConfig":"34"},{"size":497,"mtime":1649516241077,"results":"44","hashOfConfig":"34"},{"size":381,"mtime":1651187846940,"results":"45","hashOfConfig":"46"},{"size":910,"mtime":1651192773116,"results":"47","hashOfConfig":"46"},{"size":890,"mtime":1651187846938,"results":"48","hashOfConfig":"46"},{"size":283,"mtime":1651187846937,"results":"49","hashOfConfig":"46"},{"size":279,"mtime":1651192269503,"results":"50","hashOfConfig":"46"},{"size":497,"mtime":1651187846939,"results":"51","hashOfConfig":"46"},{"size":490,"mtime":1651187846938,"results":"52","hashOfConfig":"46"},{"size":413,"mtime":1651187846937,"results":"53","hashOfConfig":"46"},{"size":377,"mtime":1651195507256,"results":"54","hashOfConfig":"46"},{"size":7024,"mtime":1651191924260,"results":"55","hashOfConfig":"46"},{"size":320,"mtime":1651187846936,"results":"56","hashOfConfig":"46"},{"size":1089,"mtime":1651196126658,"results":"57","hashOfConfig":"46"},{"size":910,"mtime":1651190106715,"results":"58","hashOfConfig":"46"},{"size":790,"mtime":1651195238067,"results":"59","hashOfConfig":"46"},{"size":857,"mtime":1651195028632,"results":"60","hashOfConfig":"46"},{"size":381,"mtime":1652642750169,"results":"61","hashOfConfig":"62"},{"size":201,"mtime":1652652823123,"results":"63","hashOfConfig":"62"},{"size":3562,"mtime":1652656321870,"results":"64","hashOfConfig":"62"},{"size":283,"mtime":1652642750165,"results":"65","hashOfConfig":"62"},{"size":377,"mtime":1652642750167,"results":"66","hashOfConfig":"62"},{"size":366,"mtime":1652655912535,"results":"67","hashOfConfig":"62"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"14l1itl",{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"zks26p",{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"96"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"96"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"96"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zq3ek6",{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/scarlet/Desktop/React/01-starting-project/src/index.js",[],["139","140"],"/Users/scarlet/Desktop/React/01-starting-project/src/App.js",["141"],"import Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport Contact from './components/UI/Contact';\nimport { useState } from 'react';\nimport LiveChat from 'react-livechat'\n\nfunction App() {\n  const [clicked,setClick]=useState(false)\n\n  return (\n    <Layout clicked={clicked} setClick={setClick}>\n       {clicked?<Cart clicked={clicked}/>:\"\"}\n      <Products/>\n      <Contact/>\n      {/* <LiveChat license={14011275} /> */}\n    </Layout>\n  );\n}\n\nexport default App;\n","/Users/scarlet/Desktop/React/01-starting-project/src/components/Cart/Cart.js",[],"/Users/scarlet/Desktop/React/01-starting-project/src/components/Shop/Products.js",[],"/Users/scarlet/Desktop/React/01-starting-project/src/components/Layout/Layout.js",[],"/Users/scarlet/Desktop/React/01-starting-project/src/components/Shop/ProductItem.js",["142"],"import Card from '../UI/Card';\nimport classes from './ProductItem.module.css';\n\nconst ProductItem = (props) => {\n  const { title, price, description,id } = props;\n  \n\n  return (\n    <li className={classes.item}>\n      <Card>\n        <header>\n          <h3>{title}</h3>\n          <div className={classes.price}>${price}</div>\n        </header>\n        <p>{description}</p>\n        <div className={classes.actions}>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ProductItem;\n","/Users/scarlet/Desktop/React/01-starting-project/src/components/Layout/MainHeader.js",[],"/Users/scarlet/Desktop/React/01-starting-project/src/components/UI/Card.js",[],"/Users/scarlet/Desktop/React/01-starting-project/src/components/Cart/CartButton.js",[],"/Users/scarlet/Desktop/React/01-starting-project/src/components/UI/Form.js",["143"],"import { Fragment, useRef,useState } from 'react';\nimport { useAlert } from 'react-alert'\n\nimport Select from 'react-select'\nimport makeAnimated from 'react-select/animated';\nimport BedIcon from '@mui/icons-material/Bed';\nimport ChairIcon from '@mui/icons-material/Chair';\nimport BathtubIcon from '@mui/icons-material/Bathtub';\n\nimport Card from './Card';\nimport classes from './Form.module.css';\nimport validator from 'validator';\n\nconst Form = (props) => {\n\n\n//------------options for select------------\n  const animatedComponents = makeAnimated();\n  const options = [\n    { value: 'basement', label: 'Basement' },\n    { value: 'window Wipe', label: 'Window Wipe' },\n    { value: 'carpet', label: 'Carpet' },\n    { value: 'electrial', label: 'Electrial Appliance' },\n    { value: 'other', label: 'Other' }\n  ]\n  const[selected,setSelect]=useState([]);\n  \n\n//----------------------------------------\n\n  const alert = useAlert()\n  const emailInputRef = useRef();\n  const nameInputRef = useRef();\n  const contactRef=useRef();\n  const addressRef=useRef();\n  const appointmentRef=useRef(\" \");\n  const bedroom=useRef(0);\n  const bathroom=useRef(0);\n  const livingroom=useRef(0);\n  const otherOption=useRef(\"\");\n\n\n  function submitFormHandler(event) { \n    event.preventDefault();\n    const axios = require('axios');\n    const enteredEmail = emailInputRef.current.value;\n    const enteredName = nameInputRef.current.value;\n    const enteredContact=contactRef.current.value;\n    const enteredAddress=addressRef.current.value;\n    const enteredAppointment=appointmentRef.current.value;\n    const enteredBedroom=bedroom.current.value;\n    const enteredBathroom=bathroom.current.value;\n    const enteredLivingroom=livingroom.current.value;\n    const enteredOther=otherOption.current.value\n    //--------------check other option---------------------//\n    var other=\"\";\n    if(selected.find((select)=>\n    select.value===\"other\"\n  )){\n       if(!enteredOther){\n          document.getElementById('other').style.borderColor='red';\n          alert.error(\"Please enter value for other\",{onClose:()=>{\n          document.getElementById('other').style.borderColor='black';\n        }\n       })}\n       else{\n         other=enteredOther\n       }\n    }\n    //--------------check email, zip code, phone number---------------------//\n    if(!validator.isEmail(enteredEmail)){\n      document.getElementById('email').style.borderColor='red';\n      alert.error(\"Please enter valid email\",{onClose:()=>{\n        document.getElementById('email').style.borderColor='black';\n      }})\n      return\n    }\n\n    if(!validator.isMobilePhone(enteredContact,['en-CA'])){\n      document.getElementById('contact').style.borderColor='red';\n      alert.error(\"Please enter valid phone number\",{onClose:()=>{\n        document.getElementById('contact').style.borderColor='black';\n        \n      }})\n      return\n    }\n    if(!validator.isPostalCode(enteredAddress,['CA'])){\n      document.getElementById('address').style.borderColor='red';\n      alert.error(\"Please enter valid zip code\",{onClose:()=>{\n        document.getElementById('address').style.borderColor='black';\n      }})\n      return\n    }\n\n    if(validator.isMobilePhone(enteredContact,['en-CA'])&&validator.isEmail(enteredEmail)){\n        axios.post('https://mybackend1.herokuapp.com/appointment',{\n          email:enteredEmail,\n          name: enteredName,\n          contact:enteredContact,\n          address:enteredAddress,\n          selected:selected.map((item)=>\n            item.value)||null,\n          other:enteredOther||null,\n          bedroom:enteredBedroom||null,\n          bathroom:enteredBathroom||null,\n          livingroom:enteredLivingroom||null,\n          appointment:enteredAppointment\n        })\n        .then(function (response) {\n        alert.show(\"Thanks! \\n We will process your request asap\")\n        document.getElementById('name').value=\"\";\n        document.getElementById('email').value=\"\";\n        document.getElementById('contact').value=\"\";\n        document.getElementById('address').value=\"\"\n        document.getElementById('appointment').value=\"\"\n        })\n        .catch(function (error) {\n          alert.error(\"cannot send the data\")\n        })\n    }\n    else{\n        alert.error(\"Please fill valid contents\")\n    }\n  }\n\n\n  return (\n    <Fragment>\n      <Card clicked={props.clicked}>\n        <form\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          <div className={classes.control}>\n            <label htmlFor='email'>Email</label>\n            <input type='text' placeholder='Email' id='email' ref={emailInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='name'>Name</label>\n            <input type='text' placeholder='Name' id='name' ref={nameInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='contact'>Contact</label>\n            <input type='text' placeholder='Tel' id='contact' ref={contactRef} />\n          </div>\n          <div className={classes.control}>\n         <div className={classes.selection}>\n         <label><BedIcon/> Bedroom\n         <input\n          type=\"number\"\n          min=\"0\"\n          max=\"10\"\n          ref={bedroom}\n            />\n         </label>\n         <label><BathtubIcon/> Bathroom\n          <input\n          type=\"number\"\n          min=\"0\"\n          max=\"10\"\n          ref={bathroom}\n            />\n         </label>\n         <label><ChairIcon/> Livingroom\n         <input\n          type=\"number\"\n          min=\"0\"\n          max=\"10\"\n          ref={livingroom}\n            />\n         </label>\n         </div>\n          <label htmlFor='select'>Selection for extra service</label>\n          <Select \n          // closeMenuOnSelect={false}\n          className={classes.control} \n          components={animatedComponents}\n          isMulti\n          onChange={options=>{setSelect(options)}}\n          options={options}/>\n          {selected.find((option)=>\n            option.value===\"other\")? <input className={classes.other} type='text' placeholder='Other' id='other' ref={otherOption} />:false}\n          </div>\n\n          <div className={classes.control}>\n            <label htmlFor='postal code'>Postal Code</label>\n            <input  className={classes.postal} type='text' placeholder='Zip Code' id='address' ref={addressRef} />\n            <label>*Extra charge may apply for remote area</label>\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='appointment'>Appointment</label>\n            <textarea type='text' rows={3} placeholder='Appointment Detail' id='appointment' ref={appointmentRef} />\n          </div>\n          \n          <div className={classes.actions}>\n            <button onClick={submitFormHandler} className='btn'>Submit</button>\n          </div>\n          \n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default Form;","/Users/scarlet/Desktop/React/01-starting-project/src/components/UI/Contact.js",[],"/Users/scarlet/Desktop/React/cleaning-service-project/src/index.js",[],["144","145"],"/Users/scarlet/Desktop/React/cleaning-service-project/src/App.js",[],"/Users/scarlet/Desktop/React/cleaning-service-project/src/components/Shop/Products.js",[],"/Users/scarlet/Desktop/React/cleaning-service-project/src/components/Layout/Layout.js",[],"/Users/scarlet/Desktop/React/cleaning-service-project/src/components/Cart/Cart.js",[],"/Users/scarlet/Desktop/React/cleaning-service-project/src/components/UI/Contact.js",[],"/Users/scarlet/Desktop/React/cleaning-service-project/src/components/Shop/ProductItem.js",["146"],"/Users/scarlet/Desktop/React/cleaning-service-project/src/components/Layout/MainHeader.js",[],"/Users/scarlet/Desktop/React/cleaning-service-project/src/components/UI/Card.js",[],"/Users/scarlet/Desktop/React/cleaning-service-project/src/components/UI/Form.js",["147","148"],"import { Fragment, useRef,useState } from 'react';\nimport { useAlert } from 'react-alert'\n\nimport Select from 'react-select'\nimport makeAnimated from 'react-select/animated';\nimport BedIcon from '@mui/icons-material/Bed';\nimport ChairIcon from '@mui/icons-material/Chair';\nimport BathtubIcon from '@mui/icons-material/Bathtub';\n\nimport Card from './Card';\nimport classes from './Form.module.css';\nimport validator from 'validator';\nimport Overlay from \"../Overlay\"\n\nconst Form = (props) => {\n\n\n//------------options for select------------\n  const animatedComponents = makeAnimated();\n  const options = [\n    { value: 'basement', label: 'Basement' },\n    { value: 'window Wipe', label: 'Window Wipe' },\n    { value: 'carpet', label: 'Carpet' },\n    { value: 'electrial', label: 'Electrial Appliance' },\n    { value: 'other', label: 'Other' }\n  ]\n  const[selected,setSelect]=useState([]);\n  \n\n//----------------------------------------\n\n  const alert = useAlert()\n  const emailInputRef = useRef();\n  const nameInputRef = useRef();\n  const contactRef=useRef();\n  const addressRef=useRef();\n  const appointmentRef=useRef(\" \");\n  const bedroom=useRef(0);\n  const bathroom=useRef(0);\n  const livingroom=useRef(0);\n  const otherOption=useRef(\"\");\n\n\n  function submitFormHandler(event) { \n    event.preventDefault();\n    const axios = require('axios');\n    const enteredEmail = emailInputRef.current.value;\n    const enteredName = nameInputRef.current.value;\n    const enteredContact=contactRef.current.value;\n    const enteredAddress=addressRef.current.value;\n    const enteredAppointment=appointmentRef.current.value;\n    const enteredBedroom=bedroom.current.value;\n    const enteredBathroom=bathroom.current.value;\n    const enteredLivingroom=livingroom.current.value;\n    const enteredOther=otherOption.current.value\n    //--------------check other option---------------------//\n    var other=\"\";\n    if(selected.find((select)=>\n    select.value===\"other\"\n  )){\n       if(!enteredOther){\n          document.getElementById('other').style.borderColor='red';\n          alert.error(\"Please enter value for other\",{onClose:()=>{\n          document.getElementById('other').style.borderColor='black';\n        }\n       })}\n       else{\n         other=enteredOther\n       }\n    }\n    //--------------check email, zip code, phone number---------------------//\n    if(!validator.isEmail(enteredEmail)){\n      document.getElementById('email').style.borderColor='red';\n      alert.error(\"Please enter valid email\",{onClose:()=>{\n        document.getElementById('email').style.borderColor='black';\n      }})\n      return\n    }\n\n    if(!validator.isMobilePhone(enteredContact,['en-CA'])){\n      document.getElementById('contact').style.borderColor='red';\n      alert.error(\"Please enter valid phone number\",{onClose:()=>{\n        document.getElementById('contact').style.borderColor='black';\n        \n      }})\n      return\n    }\n    if(!validator.isPostalCode(enteredAddress,['CA'])){\n      document.getElementById('address').style.borderColor='red';\n      alert.error(\"Please enter valid zip code\",{onClose:()=>{\n        document.getElementById('address').style.borderColor='black';\n      }})\n      return\n    }\n\n    if(validator.isMobilePhone(enteredContact,['en-CA'])&&validator.isEmail(enteredEmail)){\n        axios.post('https://mybackend1.herokuapp.com/appointment',{\n          email:enteredEmail,\n          name: enteredName,\n          contact:enteredContact,\n          address:enteredAddress,\n          selected:selected.map((item)=>\n            item.value)||null,\n          other:enteredOther||null,\n          bedroom:enteredBedroom||null,\n          bathroom:enteredBathroom||null,\n          livingroom:enteredLivingroom||null,\n          appointment:enteredAppointment\n        })\n        .then(function (response) {\n        alert.show(\"Thanks! \\n We will process your request asap\")\n        document.getElementById('name').value=\"\";\n        document.getElementById('email').value=\"\";\n        document.getElementById('contact').value=\"\";\n        document.getElementById('address').value=\"\"\n        document.getElementById('appointment').value=\"\"\n        })\n        .catch(function (error) {\n          alert.error(\"cannot send the data\")\n        })\n    }\n    else{\n        alert.error(\"Please fill valid contents\")\n    }\n  }\n\n\n  return (\n    <Overlay clicked={props.clicked} setClick={props.setClick}>\n      <Card >\n        <form\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          <h2>Quote Form</h2>\n          <div className={classes.control}>\n            <label htmlFor='email'>Email</label>\n            <input type='text' placeholder='Email' id='email' ref={emailInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='name'>Name</label>\n            <input type='text' placeholder='Name' id='name' ref={nameInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='contact'>Contact</label>\n            <input type='text' placeholder='Tel' id='contact' ref={contactRef} />\n          </div>\n          <div className={classes.control}>\n         <div className={classes.selection}>\n         <label><BedIcon/> Bedroom\n         <input\n          type=\"number\"\n          min=\"0\"\n          max=\"10\"\n          ref={bedroom}\n            />\n         </label>\n         <label><BathtubIcon/> Bathroom\n          <input\n          type=\"number\"\n          min=\"0\"\n          max=\"10\"\n          ref={bathroom}\n            />\n         </label>\n         <label><ChairIcon/> Livingroom\n         <input\n          type=\"number\"\n          min=\"0\"\n          max=\"10\"\n          ref={livingroom}\n            />\n         </label>\n         </div>\n          <label htmlFor='select'>Selection for extra service</label>\n          <Select \n          // closeMenuOnSelect={false}\n          className={classes.control} \n          components={animatedComponents}\n          isMulti\n          onChange={options=>{setSelect(options)}}\n          options={options}/>\n          {selected.find((option)=>\n            option.value===\"other\")? <input className={classes.other} type='text' placeholder='Other' id='other' ref={otherOption} />:false}\n          </div>\n\n          <div className={classes.control}>\n            <label htmlFor='postal code'>Postal Code</label>\n            <input  className={classes.postal} type='text' placeholder='Zip Code' id='address' ref={addressRef} />\n            <label>*Extra charge may apply for remote area</label>\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='appointment'>Appointment</label>\n            <textarea type='text' rows={3} placeholder='Appointment Detail' id='appointment' ref={appointmentRef} />\n          </div>\n          \n          <div className={classes.actions}>\n            <button onClick={submitFormHandler} className='btn'>Submit</button>\n          </div>\n          \n        </form>\n      </Card>\n    </Overlay>\n  );\n};\n\nexport default Form;","/Users/scarlet/Desktop/React/cleaning-service-project/src/components/Cart/CartButton.js",[],"/Users/scarlet/Desktop/React/cleaning-service-project/src/components/Layout/Footer.js",["149","150","151","152"],"/Users/scarlet/Desktop/React/cleaning-service-project/src/components/Display.js",["153","154","155","156"],"import \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport Slider from \"react-slick\";\nimport example1 from \"../assets/example1.png\"\nimport example2 from \"../assets/example2.png\"\nimport example3 from \"../assets/example3.png\"\nimport classes from \"./Display.module.css\"\nimport { isMobile } from \"react-device-detect\";\n\nconst Display=()=>{\n    var settings = {\n        dots: true,\n        infinite: true,\n        speed: 500,\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        draggble:true,\n        arrows:false,\n        autoplay:true\n\n      };\n    return (\n        <Slider className={classes.slider} {...settings}>\n          <div>\n            <img src={example1}/>\n          </div>\n          <div>\n            <img src={example2}/>\n          </div>\n          <div>\n          <img src={example3}/>\n          </div>\n        </Slider>\n        )\n}\n\nexport default Display;","/Users/scarlet/Desktop/React/cleaning-service-project/src/components/About.js",["157"],"/Users/scarlet/Desktop/React/cleaning-service-project/src/components/Overlay.js",[],"/Users/scarlet/Desktop/cleaning-service-project/src/index.js",[],"/Users/scarlet/Desktop/cleaning-service-project/src/App.js",[],"/Users/scarlet/Desktop/cleaning-service-project/src/components/UI/Form.js",["158"],"/Users/scarlet/Desktop/cleaning-service-project/src/components/Layout/Layout.js",[],"/Users/scarlet/Desktop/cleaning-service-project/src/components/UI/Card.js",[],"/Users/scarlet/Desktop/cleaning-service-project/src/components/Layout/MainHeader.js",[],{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":6,"column":8,"nodeType":"165","messageId":"166","endLine":6,"endColumn":16},{"ruleId":"163","severity":1,"message":"167","line":5,"column":37,"nodeType":"165","messageId":"166","endLine":5,"endColumn":39},{"ruleId":"163","severity":1,"message":"168","line":67,"column":10,"nodeType":"165","messageId":"166","endLine":67,"endColumn":15},{"ruleId":"159","replacedBy":"169"},{"ruleId":"161","replacedBy":"170"},{"ruleId":"163","severity":1,"message":"167","line":5,"column":37,"nodeType":"165","messageId":"166","endLine":5,"endColumn":39},{"ruleId":"163","severity":1,"message":"171","line":1,"column":10,"nodeType":"165","messageId":"166","endLine":1,"endColumn":18},{"ruleId":"163","severity":1,"message":"168","line":68,"column":10,"nodeType":"165","messageId":"166","endLine":68,"endColumn":15},{"ruleId":"172","severity":1,"message":"173","line":11,"column":21,"nodeType":"174","endLine":11,"endColumn":104},{"ruleId":"172","severity":1,"message":"173","line":14,"column":21,"nodeType":"174","endLine":14,"endColumn":54},{"ruleId":"172","severity":1,"message":"173","line":17,"column":21,"nodeType":"174","endLine":17,"endColumn":54},{"ruleId":"172","severity":1,"message":"173","line":20,"column":21,"nodeType":"174","endLine":20,"endColumn":54},{"ruleId":"163","severity":1,"message":"175","line":8,"column":10,"nodeType":"165","messageId":"166","endLine":8,"endColumn":18},{"ruleId":"176","severity":1,"message":"177","line":25,"column":13,"nodeType":"174","endLine":25,"endColumn":34},{"ruleId":"176","severity":1,"message":"177","line":28,"column":13,"nodeType":"174","endLine":28,"endColumn":34},{"ruleId":"176","severity":1,"message":"177","line":31,"column":11,"nodeType":"174","endLine":31,"endColumn":32},{"ruleId":"176","severity":1,"message":"177","line":14,"column":9,"nodeType":"174","endLine":14,"endColumn":34},{"ruleId":"163","severity":1,"message":"178","line":15,"column":9,"nodeType":"165","messageId":"166","endLine":15,"endColumn":27},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"no-unused-vars","'LiveChat' is defined but never used.","Identifier","unusedVar","'id' is assigned a value but never used.","'other' is assigned a value but never used.",["179"],["180"],"'Fragment' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'isMobile' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'animatedComponents' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]