[{"/Users/scarlet/Desktop/React/01-starting-project/src/index.js":"1","/Users/scarlet/Desktop/React/01-starting-project/src/App.js":"2","/Users/scarlet/Desktop/React/01-starting-project/src/components/Cart/Cart.js":"3","/Users/scarlet/Desktop/React/01-starting-project/src/components/Shop/Products.js":"4","/Users/scarlet/Desktop/React/01-starting-project/src/components/Layout/Layout.js":"5","/Users/scarlet/Desktop/React/01-starting-project/src/components/Shop/ProductItem.js":"6","/Users/scarlet/Desktop/React/01-starting-project/src/components/Layout/MainHeader.js":"7","/Users/scarlet/Desktop/React/01-starting-project/src/components/UI/Card.js":"8","/Users/scarlet/Desktop/React/01-starting-project/src/components/Cart/CartButton.js":"9","/Users/scarlet/Desktop/React/01-starting-project/src/components/UI/Form.js":"10","/Users/scarlet/Desktop/React/01-starting-project/src/components/UI/Contact.js":"11"},{"size":381,"mtime":1649519650520,"results":"12","hashOfConfig":"13"},{"size":555,"mtime":1649959367850,"results":"14","hashOfConfig":"13"},{"size":295,"mtime":1649509834238,"results":"15","hashOfConfig":"13"},{"size":890,"mtime":1649956216933,"results":"16","hashOfConfig":"13"},{"size":283,"mtime":1649475253465,"results":"17","hashOfConfig":"13"},{"size":490,"mtime":1649961213512,"results":"18","hashOfConfig":"13"},{"size":413,"mtime":1649513796685,"results":"19","hashOfConfig":"13"},{"size":306,"mtime":1649511911992,"results":"20","hashOfConfig":"13"},{"size":320,"mtime":1649475072246,"results":"21","hashOfConfig":"13"},{"size":6936,"mtime":1649960920501,"results":"22","hashOfConfig":"13"},{"size":497,"mtime":1649516241077,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"14l1itl",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/scarlet/Desktop/React/01-starting-project/src/index.js",[],["50","51"],"/Users/scarlet/Desktop/React/01-starting-project/src/App.js",["52"],"import Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport Contact from './components/UI/Contact';\nimport { useState } from 'react';\nimport LiveChat from 'react-livechat'\n\nfunction App() {\n  const [clicked,setClick]=useState(false)\n\n  return (\n    <Layout clicked={clicked} setClick={setClick}>\n       {clicked?<Cart clicked={clicked}/>:\"\"}\n      <Products/>\n      <Contact/>\n      {/* <LiveChat license={14011275} /> */}\n    </Layout>\n  );\n}\n\nexport default App;\n","/Users/scarlet/Desktop/React/01-starting-project/src/components/Cart/Cart.js",[],"/Users/scarlet/Desktop/React/01-starting-project/src/components/Shop/Products.js",[],"/Users/scarlet/Desktop/React/01-starting-project/src/components/Layout/Layout.js",[],"/Users/scarlet/Desktop/React/01-starting-project/src/components/Shop/ProductItem.js",["53"],"import Card from '../UI/Card';\nimport classes from './ProductItem.module.css';\n\nconst ProductItem = (props) => {\n  const { title, price, description,id } = props;\n  \n\n  return (\n    <li className={classes.item}>\n      <Card>\n        <header>\n          <h3>{title}</h3>\n          <div className={classes.price}>${price}</div>\n        </header>\n        <p>{description}</p>\n        <div className={classes.actions}>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ProductItem;\n","/Users/scarlet/Desktop/React/01-starting-project/src/components/Layout/MainHeader.js",[],"/Users/scarlet/Desktop/React/01-starting-project/src/components/UI/Card.js",[],"/Users/scarlet/Desktop/React/01-starting-project/src/components/Cart/CartButton.js",[],"/Users/scarlet/Desktop/React/01-starting-project/src/components/UI/Form.js",["54"],"import { Fragment, useRef,useState } from 'react';\nimport { useAlert } from 'react-alert'\n\nimport Select from 'react-select'\nimport makeAnimated from 'react-select/animated';\nimport BedIcon from '@mui/icons-material/Bed';\nimport ChairIcon from '@mui/icons-material/Chair';\nimport BathtubIcon from '@mui/icons-material/Bathtub';\n\nimport Card from './Card';\nimport classes from './Form.module.css';\nimport validator from 'validator';\n\nconst Form = (props) => {\n\n\n//------------options for select------------\n  const animatedComponents = makeAnimated();\n  const options = [\n    { value: 'basement', label: 'Basement' },\n    { value: 'window Wipe', label: 'Window Wipe' },\n    { value: 'carpet', label: 'Carpet' },\n    { value: 'electrial', label: 'Electrial Appliance' },\n    { value: 'other', label: 'Other' }\n  ]\n  const[selected,setSelect]=useState([]);\n  \n\n//----------------------------------------\n\n  const alert = useAlert()\n  const emailInputRef = useRef();\n  const nameInputRef = useRef();\n  const contactRef=useRef();\n  const addressRef=useRef();\n  const appointmentRef=useRef(\" \");\n  const bedroom=useRef(0);\n  const bathroom=useRef(0);\n  const livingroom=useRef(0);\n  const otherOption=useRef(\"\");\n\n\n  function submitFormHandler(event) { \n    event.preventDefault();\n    const axios = require('axios');\n    const enteredEmail = emailInputRef.current.value;\n    const enteredName = nameInputRef.current.value;\n    const enteredContact=contactRef.current.value;\n    const enteredAddress=addressRef.current.value;\n    const enteredAppointment=appointmentRef.current.value;\n    const enteredBedroom=bedroom.current.value;\n    const enteredBathroom=bathroom.current.value;\n    const enteredLivingroom=livingroom.current.value;\n    const enteredOther=otherOption.current.value\n    //--------------check other option---------------------//\n    var other=\"\";\n    if(selected.find((select)=>\n    select.value===\"other\"\n  )){\n       if(!enteredOther){\n          document.getElementById('other').style.borderColor='red';\n          alert.error(\"Please enter value for other\",{onClose:()=>{\n          document.getElementById('other').style.borderColor='black';\n        }\n       })}\n       else{\n         other=enteredOther\n       }\n    }\n    //--------------check email, zip code, phone number---------------------//\n    if(!validator.isEmail(enteredEmail)){\n      document.getElementById('email').style.borderColor='red';\n      alert.error(\"Please enter valid email\",{onClose:()=>{\n        document.getElementById('email').style.borderColor='black';\n      }})\n      return\n    }\n\n    if(!validator.isMobilePhone(enteredContact,['en-CA'])){\n      document.getElementById('contact').style.borderColor='red';\n      alert.error(\"Please enter valid phone number\",{onClose:()=>{\n        document.getElementById('contact').style.borderColor='black';\n        \n      }})\n      return\n    }\n    if(!validator.isPostalCode(enteredAddress,['CA'])){\n      document.getElementById('address').style.borderColor='red';\n      alert.error(\"Please enter valid zip code\",{onClose:()=>{\n        document.getElementById('address').style.borderColor='black';\n      }})\n      return\n    }\n\n    if(validator.isMobilePhone(enteredContact,['en-CA'])&&validator.isEmail(enteredEmail)){\n        axios.post('https://mybackend1.herokuapp.com/appointment',{\n          email:enteredEmail,\n          name: enteredName,\n          contact:enteredContact,\n          address:enteredAddress,\n          selected:selected.map((item)=>\n            item.value)||null,\n          other:enteredOther||null,\n          bedroom:enteredBedroom||null,\n          bathroom:enteredBathroom||null,\n          livingroom:enteredLivingroom||null,\n          appointment:enteredAppointment\n        })\n        .then(function (response) {\n        alert.show(\"Thanks! \\n We will process your request asap\")\n        document.getElementById('name').value=\"\";\n        document.getElementById('email').value=\"\";\n        document.getElementById('contact').value=\"\";\n        document.getElementById('address').value=\"\"\n        document.getElementById('appointment').value=\"\"\n        })\n        .catch(function (error) {\n          alert.error(\"cannot send the data\")\n        })\n    }\n    else{\n        alert.error(\"Please fill valid contents\")\n    }\n  }\n\n\n  return (\n    <Fragment>\n      <Card clicked={props.clicked}>\n        <form\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          <div className={classes.control}>\n            <label htmlFor='email'>Email</label>\n            <input type='text' placeholder='Email' id='email' ref={emailInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='name'>Name</label>\n            <input type='text' placeholder='Name' id='name' ref={nameInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='contact'>Contact</label>\n            <input type='text' placeholder='Tel' id='contact' ref={contactRef} />\n          </div>\n          <div className={classes.control}>\n         <div className={classes.selection}>\n         <label><BedIcon/> Bedroom\n         <input\n          type=\"number\"\n          min=\"0\"\n          max=\"10\"\n          ref={bedroom}\n            />\n         </label>\n         <label><BathtubIcon/> Bathroom\n          <input\n          type=\"number\"\n          min=\"0\"\n          max=\"10\"\n          ref={bathroom}\n            />\n         </label>\n         <label><ChairIcon/> Livingroom\n         <input\n          type=\"number\"\n          min=\"0\"\n          max=\"10\"\n          ref={livingroom}\n            />\n         </label>\n         </div>\n          <label htmlFor='select'>Selection for extra service</label>\n          <Select \n          // closeMenuOnSelect={false}\n          className={classes.control} \n          components={animatedComponents}\n          isMulti\n          onChange={options=>{setSelect(options)}}\n          options={options}/>\n          {selected.find((option)=>\n            option.value===\"other\")? <input className={classes.other} type='text' placeholder='Other' id='other' ref={otherOption} />:false}\n          </div>\n\n          <div className={classes.control}>\n            <label htmlFor='postal code'>Postal Code</label>\n            <input  className={classes.postal} type='text' placeholder='Zip Code' id='address' ref={addressRef} />\n            <label>*Extra charge may apply for remote area</label>\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='appointment'>Appointment</label>\n            <textarea type='text' rows={3} placeholder='Appointment Detail' id='appointment' ref={appointmentRef} />\n          </div>\n          \n          <div className={classes.actions}>\n            <button onClick={submitFormHandler} className='btn'>Submit</button>\n          </div>\n          \n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default Form;","/Users/scarlet/Desktop/React/01-starting-project/src/components/UI/Contact.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":6,"column":8,"nodeType":"61","messageId":"62","endLine":6,"endColumn":16},{"ruleId":"59","severity":1,"message":"63","line":5,"column":37,"nodeType":"61","messageId":"62","endLine":5,"endColumn":39},{"ruleId":"59","severity":1,"message":"64","line":67,"column":10,"nodeType":"61","messageId":"62","endLine":67,"endColumn":15},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'LiveChat' is defined but never used.","Identifier","unusedVar","'id' is assigned a value but never used.","'other' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]